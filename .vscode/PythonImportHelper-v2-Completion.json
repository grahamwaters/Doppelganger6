[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "configparser",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "configparser",
        "description": "configparser",
        "detail": "configparser",
        "documentation": {}
    },
    {
        "label": "get_profile_links",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_profile_links(soup):\n    \"\"\"\n    get_profile_links is a function that takes in a BeautifulSoup object and returns a list of profile links.\n    :param soup: BeautifulSoup object\n    :type soup: BeautifulSoup\n    :return: list of profile links\n    :rtype: list\n    \"\"\"\n    links = soup.find_all('a', class_='mr-1')\n    return links",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_profile_data",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_profile_data(soup):\n    \"\"\"\n    get_profile_data is a function that takes in a BeautifulSoup object and returns a dictionary of profile data.\n    :param soup: BeautifulSoup object\n    :type soup: BeautifulSoup\n    :return: dictionary of profile data\n    :rtype: dict\n    \"\"\"\n    data = {}\n    data['name'] = soup.find('h1', class_='h3').text",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_profile_skills",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_profile_skills(soup):\n    \"\"\"\n    get_profile_skills is a function that takes in a BeautifulSoup object and returns a list of profile skills.\n    :param soup: BeautifulSoup object\n    :type soup: BeautifulSoup\n    :return: list of profile skills\n    :rtype: list\n    \"\"\"\n    skills = soup.find_all('span', class_='badge badge-light mr-1')\n    return skills",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "process_page",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def process_page(job_title,company_target,page_number=''):\n    # begin by making a request to the website with the search query\n    # job_title = 'Data Scientist'\n    # company_target = 'IBM'\n    # create the company and title strings\n    company = company_target.replace(' ', '+')\n    job = job_title.replace(' ', '+')\n    # create the search query\n    github_search_query = 'https://github.com/search?{}q={}+{}&type=users'.format(str(page_number),company, job)\n    # make a request to the website",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    \"\"\"\n    main is the main function of the program.\n    :return: None\n    :rtype: None\n    \"\"\"\n    # read your profile to an html file and save it to the data folder.\n    # the profile url is in the config.ini file\n    # read the config.ini file\n    config = configparser.ConfigParser()",
        "detail": "main",
        "documentation": {}
    }
]